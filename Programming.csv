"Language","Code","Description"
"Python","print(""Hello, World!"")","Hello World example"
"Python","def greet(name): print(f""Hello, {name}"")","Function example"
"Python","my_list = [1, 2, 3]","List example"
"Python","my_dict = {""name"": ""John"", ""age"": 30}","Dictionary example"
"Python","try: ... except Exception as e: ...","Error handling"
"Python","with open(""file.txt"", ""r"") as f: ...","File input/output"
"Language","Code","Description"
"Autohotkey","^!z:: MsgBox, Hello, World!","Hotkey example"
"Autohotkey","Send, Hello, World!","Send keys example"
"Autohotkey","FileRead, contents, example.txt","File input example"
"Autohotkey","FileAppend, Hello, World!, example.txt","File output example"
"Autohotkey","Loop, 5 { MsgBox, Loop iteration %A_Index% }","Loop example"
"Autohotkey","IfWinExist, Untitled - Notepad { WinActivate }","Window manipulation example"
"Autohotkey","InputBox, UserInput, User Input, Please enter your name.","Input box example"
"Autohotkey","^!z:: MsgBox, Hello, World!","Hotkey example"
"Language","Code","Description"
"HTML","<h1>Hello, World!</h1>","Heading example"
"HTML","<p>This is a paragraph.</p>","Paragraph example"
"HTML","<a href=""https://www.example.com"">Link</a>","Hyperlink example"
"HTML","<img src=""image.jpg"" alt=""Image"">","Image example"
"HTML","<ul><li>Item 1</li><li>Item 2</li></ul>","Unordered list example"
"HTML","<table><tr><td>Cell 1</td><td>Cell 2</td></tr></table>","Table example"
"HTML","<form><input type=""text"" name=""username""><input type=""submit""></form>","Form example"
"HTML","<h1>Hello, World!</h1>","Basic HTML structure"
"Language","Code","Description"
"Java","public class HelloWorld { public static void main(String[] args) { System.out.println(""Hello, World!""); } }","Hello World example"
"Java","public class Person { private String name; public Person(String name) { this.name = name; } public String getName() { return name; } }","Class example"
"Java","int[] myArray = {1, 2, 3};","Array example"
"Java","ArrayList<String> myList = new ArrayList<>(); myList.add(""Apple""); myList.add(""Banana"");","List example"
"Java","try { ... } catch (Exception e) { System.out.println(""Error: "" + e.getMessage()); }","Error handling"
"Java","File file = new File(""example.txt""); Scanner scanner = new Scanner(file);","File input"
"Java","FileWriter writer = new FileWriter(""example.txt""); writer.write(""Hello, World!""); writer.close();","File output"
"Java","public static void greet(String name) { System.out.println(""Hello, "" + name + ""!""); }","Method example"
"Java","public static int add(int x, int y) { return x + y; }","Method example with return value"
"Java","System.out.println(""Hello, World!"");","Hello World example"
"Java","public class HelloWorld { public static void main(String[] args) { System.out.println(""Hello, World!""); } }","Hello World example"
"Java","public class Person { private String name; public Person(String name) { this.name = name; } }","Class example"
"Java","int[] myArray = {1, 2, 3};","Array example"
"Java","try { ... } catch (Exception e) { ... }","Error handling"
"Java","File file = new File(""example.txt"");","File input/output"
"Language","Code","Description"
"JavaScript","console.log(""Hello, World!"");","Hello World example"
"JavaScript","function greet(name) { console.log(`Hello, ${name}!`); }","Function example"
"JavaScript","let myArray = [1, 2, 3];","Array example"
"JavaScript","try { ... } catch (error) { ... }","Error handling"
"JavaScript","const fs = require(""fs""); fs.readFile(""example.txt"", (err, data) => { ... });","File input/output"
"Language","Code","Description"
"C#","Console.WriteLine(""Hello, World!"");","Hello World example"
"C#","using System; class HelloWorld { static void Main(string[] args) { Console.WriteLine(""Hello, World!""); } }","Hello World example"
"C#","public class Person { private string name; public Person(string name) { this.name = name; } }","Class example"
"C#","int[] myArray = {1, 2, 3};","Array example"
"C#","try { ... } catch (Exception ex) { ... }","Error handling"
"C#","using (StreamWriter writer = new StreamWriter(""example.txt"")) { ... }","File input/output"
"Language","Code","Description"
"C++","#include <iostream> int main() { std::cout << ""Hello, World!"" << std::endl; return 0; }","Hello World example"
"C++","class Person { private: string name; public: Person(string name) { this->name = name; } };","Class example"
"C++","int myArray[3] = {1, 2, 3};","Array example"
"C++","try { ... } catch (const std::exception& e) { ... }","Error handling"
"C++","std::ofstream file(""example.txt"");","File input/output"
"Language","Code","Description"
"Linux","ls -l","List files in long format"
"Linux","cd ~","Change to home directory"
"Linux","mkdir mydir","Create a new directory"
"Linux","rm -rf mydir","Remove a directory recursively"
"Linux","echo ""Hello, World!"" > hello.txt","Create a file with text"
"Linux","cat hello.txt","Display file contents"
"Linux","grep ""keyword"" file.txt","Search for a keyword in a file"
"Language","Code","Description"
"Kotlin","fun main() { println(""Hello, World!"") }","Hello World example"
"Kotlin","class Person(val name: String) { fun greet() { println(""Hello, $name!"") } }","Class example"
"Kotlin","val numbers = listOf(1, 2, 3)","List example"
"Kotlin","try { ... } catch (e: Exception) { println(""Error: $e"") }","Error handling"
"Kotlin","fun add(x: Int, y: Int): Int { return x + y }","Function example"
"Language","Code","Description"
"Golang","package main; import ""fmt""; func main() { fmt.Println(""Hello, World!"") }","Hello World example"
"Golang","type Person struct { name string }; func (p *Person) greet() { fmt.Println(""Hello, "" + p.name + ""!"") }","Struct example"
"Golang","numbers := []int{1, 2, 3}","Slice example"
"Golang","if err != nil { fmt.Println(""Error:"", err) }","Error handling"
"Golang","func add(x int, y int) int { return x + y }","Function example"
"Language","Code","Description"
"Rust","fn main() { println!(""Hello, World!""); }","Hello World example"
"Language","Code","Description"
"Rust","struct Person { name: String }; impl Person { fn greet(&self) { println!(""Hello, {}!"", self.name); } }","Struct example"
"Rust","let numbers = vec![1, 2, 3];","Vector example"
"Rust","match result { Ok(value) => println!(""Result: {}"", value), Err(err) => println!(""Error: {}"", err) }","Error handling"
"Rust","fn add(x: i32, y: i32) -> i32 { x + y }","Function example"
"Rust","let x: i32 = 5;","Assign a value to a variable"
"Rust","if x > 0 { println!(""x is positive""); }","Conditional statement"
"Language","Code","Description"
"Batch","@echo off","Turn off command echoing"
"Batch","echo Hello, World!","Print text to console"
"Batch","set /p name=Enter your name: ","Get user input"
"Batch","if exist file.txt (echo File exists)","Conditional statement"
"Batch","for /l %%x in (1,1,5) do echo %%x","Loop example"
"Batch","copy file.txt file2.txt","Copy file"
"Batch","del file.txt","Delete file"
"Language","Code","Description"
"Caché ObjectScript","Class User.Person Extends %Persistent { Property Name As %String; }","Define a class"
"Caché ObjectScript","Method Hello(name As %String) { Write ""Hello, "" _ name _ ""!"" }","Define a method"
"Caché ObjectScript","Set x = 5","Assign a value to a variable"
"Language","Code","Description"
"C/AL","IF Quantity > 0 THEN BEGIN ... END","Conditional statement"
"C/AL","FOR i := 1 TO 10 DO ...","Loop example"
"C/AL","CLEAR(Item);","Clear a variable"
"Language","Code","Description"
"Caml","let rec factorial n = if n = 0 then 1 else n * factorial (n-1)","Recursive function"
"Caml","let x = 5","Assign a value to a variable"
"Caml","if x > 0 then print_endline ""x is positive""","Conditional statement"
"Language","Code","Description"
"Ceylon","shared void hello() { print(""Hello, World!""); }","Hello World example"
"Ceylon","class Person(shared String name) { }","Define a class"
"Ceylon","if (x > 0) { print(""x is positive""); }","Conditional statement"
"Language","Code","Description"
"CFEngine","bundle agent hello { reports: ""Hello, World!"" }","Hello World example"
"CFEngine","bundle agent files { files: ""/path/to/file"" -> { ""exists"" } }","File management"
"CFEngine","bundle agent packages { packages: ""package_name"" -> { ""installed"" } }","Package management"
"Language","Code","Description"
"Tcl","puts ""Hello, World!""","Hello World example"
"Tcl","set x 5","Assign a value to a variable"
"Tcl","if {$x > 0} {puts ""x is positive""}","Conditional statement"
"Tcl","for {set i 0} {$i < 10} {incr i} {puts $i}","Loop example"
"Language","Code","Description"
"Lua","print(""Hello, World!"")","Hello World example"
"Lua","x = 5","Assign a value to a variable"
"Lua","if x > 0 then print(""x is positive"") end","Conditional statement"
"Lua","for i = 1, 10 do print(i) end","Loop example"
"Language","Code","Description"
"F#","printfn ""Hello, World!""","Hello World example"
"F#","let x = 5","Assign a value to a variable"
"F#","if x > 0 then printfn ""x is positive""","Conditional statement"
"F#","for i in 1 .. 10 do printfn ""%d"" i","Loop example"
"Language","Code","Description"
"Julia","println(""Hello, World!"")","Hello World example"
"Julia","x = 5","Assign a value to a variable"
"Julia","if x > 0 println(""x is positive"") end","Conditional statement"
"Julia","for i in 1:10 println(i) end","Loop example"
"Language","Code","Description"
"TypeScript","let x: number = 5","Assign a value to a variable"
"TypeScript","if (x > 0) { console.log(""x is positive"") }","Conditional statement"
"TypeScript","for (let i = 0; i < 10; i++) { console.log(i) }","Loop example"
"Language","Code","Description"
"Swift","print(""Hello, World!"")","Hello World example"
"Swift","let x = 5","Assign a value to a variable"
"Swift","if x > 0 { print(""x is positive"") }","Conditional statement"
"Swift","for i in 1...10 { print(i) }","Loop example"
"Language","Code","Description"
"Julia","x = 5","Assign a value to a variable"
"Julia","if x > 0 println(""x is positive"") else println(""x is not positive"") end","Conditional statement"
"Julia","for i in 1:10 println(i) end","Loop example"
"Julia","function greet(name) println(""Hello, $name!"") end","Function example"
"Language","Code","Description"
"Haskell","helloWorld = putStrLn ""Hello, World!""","Hello World example"
"Haskell","let x = 5","Assign a value to a variable"
"Haskell","if x > 0 then putStrLn ""x is positive"" else putStrLn ""x is not positive""","Conditional statement"
"Haskell","[1..10]","List example"
"Language","Code","Description"
"Scala","object HelloWorld { def main(args: Array[String]) { println(""Hello, World!"") } }","Hello World example"
"Scala","val x = 5","Assign a value to a variable"
"Scala","if (x > 0) { println(""x is positive"") } else { println(""x is not positive"") }","Conditional statement"
"Scala","for (i <- 1 to 10) { println(i) }","Loop example"
"Language","Code","Description"
"Clojure","(println ""Hello, World!"")","Hello World example"
"Clojure","(def x 5)","Assign a value to a variable"
"Clojure","(if (> x 0) (println ""x is positive"") (println ""x is not positive""))","Conditional statement"
"Clojure","(doseq [i (range 1 11)] (println i))","Loop example"
"Language","Code","Description"
"Erlang","io:format(""Hello, World!~n"")","Hello World example"
"Erlang","X = 5","Assign a value to a variable"
"Erlang","if X > 0 -> io:format(""x is positive~n""); true -> io:format(""x is not positive~n"") end","Conditional statement"
"Erlang","lists:foreach(fun(X) -> io:format(""~p~n"", [X]) end, lists:seq(1, 10))","Loop example"
"Language","Code","Description"
"MATLAB","disp(""Hello, World!"")","Hello World example"
"MATLAB","x = 5","Assign a value to a variable"
"MATLAB","if x > 0 disp(""x is positive"") else disp(""x is not positive"") end","Conditional statement"
"MATLAB","for i = 1:10 disp(i) end","Loop example"
"Language","Code","Description"
"R","print(""Hello, World!"")","Hello World example"
"R","x <- 5","Assign a value to a variable"
"R","if (x > 0) { print(""x is positive"") } else { print(""x is not positive"") }","Conditional statement"
"R","for (i in 1:10) { print(i) }","Loop example"
"Language","Code","Description"
"Perl","print ""Hello, World!\n""","Hello World example"
"Perl","my $x = 5","Assign a value to a variable"
"Perl","if ($x > 0) { print ""x is positive\n"" } else { print ""x is not positive\n"" }","Conditional statement"
"Perl","for (my $i = 0; $i < 10; $i++) { print ""$i\n"" }","Loop example"
"Language","Code","Description"
"PHP","echo ""Hello, World!"";","Hello World example"
"PHP","$x = 5;","Assign a value to a variable"
"PHP","if ($x > 0) { echo ""x is positive""; } else { echo ""x is not positive""; }","Conditional statement"
"PHP","for ($i = 0; $i < 10; $i++) { echo ""$i\n""; }","Loop example"

